syntax = "proto3";
package relation;
option go_package = "relation";
import "user.proto";

message RelationActionRequest {
  uint32 user_id = 1; // 当前登录用户
  uint32 to_user_id = 2; // 对方用户id
  uint32 action_type = 3; // 1-关注 2-取消关注
}

message RelationActionResponse {
  uint32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
}

message FollowListRequest {
  uint32 actor_id = 1; // 当前登录用户id
  uint32 user_id = 2; // 对方用户id
}

message FollowListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated user.User user_list = 3; // 用户信息列表
}

message FollowerListRequest {
  uint32 actor_id = 1; // 当前登录用户id
  uint32 user_id = 2; // 对方用户id
}

message FollowerListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated user.User user_list = 3; // 用户列表
}

message FollowListCountRequest {
  uint32 user_id = 1; // 用户id
}

message FollowListCountResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  uint32 count = 3; // 关注数
}

message FollowerListCountRequest {
  uint32 user_id = 1; // 用户id
}

message FollowerListCountResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  uint32 count = 3; // 粉丝数
}

message FriendListRequest {
  uint32 user_id = 1; // 当前登录用户id
}

message FriendListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated user.User user_list = 3; // 用户列表
}

message IsFollowedRequest {
  uint32 user_id = 1;
  uint32 to_user_id = 2;
}

message IsFollowedResponse {
  bool result = 1;
}

service RelationService {
  rpc RelationAction(RelationActionRequest) returns (RelationActionResponse);
  rpc GetFollowList(FollowListRequest) returns (FollowListResponse);
  rpc GetFollowerList(FollowerListRequest) returns (FollowerListResponse);
  rpc GetFollowListCount(FollowListCountRequest) returns (FollowListCountResponse);
  rpc GetFollowerListCount(FollowerListCountRequest) returns (FollowerListCountResponse);
  rpc GetFriendList(FriendListRequest) returns (FriendListResponse);
  rpc IsFollowed(IsFollowedRequest) returns (IsFollowedResponse);
}